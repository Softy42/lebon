#############################################
# Maison Mélina — .htaccess (WWW + Sécurité)
# Date: 2025-08-26
# Objectif:
#  - Canonicaliser en https://www.maison-melina.fr (HTTPS + WWW)
#  - Conserver/moderniser vos en-têtes sécurité, cache et MIME
#  - Rediriger les anciens slugs numériques en un seul saut (301)
#############################################

########## Sécurité (nécessite mod_headers) ##########
<IfModule mod_headers.c>
  # HSTS (1 an) — attention: inclut les sous-domaines
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"

  # Protection framing (complément avec frame-ancestors via CSP plus bas)
  Header always set X-Frame-Options "SAMEORIGIN"

  # Empêcher le MIME sniffing
  Header always set X-Content-Type-Options "nosniff"

  # XSS (legacy — ignoré par la plupart des navigateurs modernes mais sans risque)
  Header always set X-XSS-Protection "1; mode=block"

  # Politique de référence
  Header always set Referrer-Policy "strict-origin-when-cross-origin"

  # Permissions (adapter si vous utilisez d'autres APIs)
  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"

  # --- Content Security Policy ---
  # NOTE: ajoute 'upgrade-insecure-requests' pour éviter le mixed content
  # connect-src inclut www + non-www (par prudence) et votre endpoint vercel (orthographe à vérifier)
  Header always set Content-Security-Policy "default-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com https://cdnjs.cloudflare.com; connect-src 'self' https://www.maison-melina.fr https://maison-melina.fr https://maison-m-lina-server.vercel.app; media-src 'self' blob: https://www.maison-melina.fr https://maison-melina.fr; img-src 'self' data: https: blob:; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline' https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://www.googletagmanager.com; frame-src 'self' https://www.google.com/recaptcha/; upgrade-insecure-requests; report-uri /api/csp-report"

  # CORS pour les polices (utile si servies depuis des sous-domaines/CDN)
  <FilesMatch "\.(woff2?|ttf|otf|eot)$">
    Header set Access-Control-Allow-Origin "*"
  </FilesMatch>
</IfModule>

########## Compression (éviter de compresser les vidéos) ##########
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/plain
  AddOutputFilterByType DEFLATE text/html
  AddOutputFilterByType DEFLATE text/css
  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE application/json
  AddOutputFilterByType DEFLATE application/xml
  AddOutputFilterByType DEFLATE image/svg+xml
  # NE PAS compresser mp4/webm (déjà compressés)
</IfModule>

########## Cache (optimisé) ##########
<IfModule mod_expires.c>
  ExpiresActive On
  # Images
  ExpiresByType image/jpg "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"

  # Polices
  ExpiresByType font/woff2 "access plus 1 year"
  ExpiresByType font/woff  "access plus 1 year"

  # CSS / JS
  ExpiresByType text/css "access plus 1 month"
  ExpiresByType application/javascript "access plus 1 month"

  # JSON / XML
  ExpiresByType application/json "access plus 1 month"
  ExpiresByType application/xml  "access plus 1 month"

  # Vidéos
  ExpiresByType video/mp4  "access plus 1 month"
  ExpiresByType video/webm "access plus 1 month"
</IfModule>

########## Protection des dossiers ##########
Options -Indexes

########## Page 404 ##########
ErrorDocument 404 /404.html

########## Types MIME ##########
AddType application/pdf .pdf
AddType font/woff2 .woff2
AddType font/woff  .woff
AddType video/mp4  .mp4
AddType video/webm .webm

########## PDF — inline + reprise ##########
<IfModule mod_headers.c>
  <FilesMatch "\.pdf$">
    Header set Content-Type "application/pdf"
    Header set Content-Disposition "inline"
    Header set Accept-Ranges "bytes"
  </FilesMatch>
</IfModule>

########## Vidéos — reprise + CORS basique ##########
<IfModule mod_headers.c>
  <FilesMatch "\.(mp4|webm)$">
    Header set Accept-Ranges "bytes"
    Header append Vary "Accept-Encoding"
    Header set Access-Control-Allow-Origin "*"
    Header set Access-Control-Allow-Methods "GET, HEAD, OPTIONS"
    Header set Access-Control-Allow-Headers "Range"
  </FilesMatch>
</IfModule>

########## Bloquer l'accès aux fichiers sensibles ##########
# Apache 2.4+
<IfModule mod_authz_core.c>
  <FilesMatch "^(\.env|\.git|composer\.(json|lock)|package(-lock)?\.json|yarn\.lock)$">
    Require all denied
  </FilesMatch>
</IfModule>
# Fallback Apache 2.2
<IfModule !mod_authz_core.c>
  <FilesMatch "^(\.env|\.git|composer\.(json|lock)|package(-lock)?\.json|yarn\.lock)$">
    Order allow,deny
    Deny from all
  </FilesMatch>
</IfModule>

#############################################
# RÉÉCRITURES / REDIRECTIONS
#############################################

# 1) Migration slugs (numériques -> sémantiques) en un seul saut vers WWW + HTTPS
RewriteEngine On
RewriteRule ^nos-maisons/1/?$ https://www.maison-melina.fr/nos-maisons/feurs/ [R=301,L]
RewriteRule ^nos-maisons/2/?$ https://www.maison-melina.fr/nos-maisons/saint-chamond/ [R=301,L]
RewriteRule ^nos-maisons/3/?$ https://www.maison-melina.fr/nos-maisons/saint-didier-en-velay/ [R=301,L]
RewriteRule ^nos-maisons/4/?$ https://www.maison-melina.fr/nos-maisons/saint-just-saint-rambert/ [R=301,L]
RewriteRule ^nos-maisons/5/?$ https://www.maison-melina.fr/nos-maisons/chateauroux/ [R=301,L]

# 2) Canonicalisation globale (HTTPS + WWW) — pour TOUT le reste
#    Une règle combinée pour éviter les doubles sauts inutiles
RewriteCond %{HTTPS} !=on [OR]
RewriteCond %{HTTP_HOST} !^www\.maison-melina\.fr$ [NC]
RewriteRule ^ https://www.maison-melina.fr%{REQUEST_URI} [L,R=301]

#############################################
# FIN
#############################################
